name: Backend Tests

on:
  pull_request:
    branches: [ main, develop ]
    paths: 
      - 'backend/**'
      - '.github/workflows/**'
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install dependencies
      working-directory: ./backend
      run: npm ci

    - name: Run linting (optional)
      working-directory: ./backend
      run: npm run lint --if-present

    - name: Run unit tests
      working-directory: ./backend
      run: npm test

    - name: Generate test coverage
      working-directory: ./backend
      run: npm run test:coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage/lcov.info
        directory: ./backend/coverage/
        flags: backend
        name: backend-coverage
        fail_ci_if_error: false

    - name: Comment PR with test results
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          let message = '## üß™ Test Results\n\n';
          
          if (context.job.status === 'success') {
            message += '‚úÖ All tests passed successfully!\n\n';
            message += `- Node.js version: ${{ matrix.node-version }}\n`;
            message += `- Tests executed in: ${process.env.RUNNER_OS}\n`;
          } else {
            message += '‚ùå Some tests failed. Please check the logs above.\n\n';
          }
          
          // Solo crear el comentario para una versi√≥n de Node para evitar spam
          if ('${{ matrix.node-version }}' === '20.x') {
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });
          }

  # Job separado para verificar que las dependencias est√©n actualizadas
  security-audit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install dependencies
      working-directory: ./backend
      run: npm ci

    - name: Run security audit
      working-directory: ./backend
      run: npm audit --audit-level high

    - name: Check for outdated packages
      working-directory: ./backend
      run: npm outdated || true